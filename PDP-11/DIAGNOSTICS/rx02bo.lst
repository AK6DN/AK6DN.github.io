       1                                	.title	rx211 boot sequence
       2                                
       3                                	.enable	AMA
       4 000000                         	.asect
       5                                	
       6        000200                  	.=200
       7 000200 000137  010000          begin:	jmp	@#start			; go to begin
       8                                
       9        010000                  	.=10000
      10                                
      11 010000 000005                  start:	reset				; the world
      12                                	
      13 010002 012701  177170          	mov	#177170,r1		; a(RXCS)
      14 010006 012700  100240          	mov	#100240,r0		; error | xfer | done
      15 010012 005002                  	clr	r2			; zero
      16 010014 012705  000200          	mov	#200,r5			; 128.
      17 010020 012704  000401          	mov	#401,r4			; 001 / 001
      18 010024 012703  177172          	mov	#177172,r3		; a(RXDB)
      19                                	
      20 010030 030011                  1$:	bit	r0,(r1)			; check error/xfer/done
      21 010032 001776                  	beq	1$			; loop if none
      22 010034 100440                  	bmi	error			; br if error
      23                                	
      24 010036 012711  000407          	mov	#407,(r1)		; double_density | read_sector | go
      25                                	
      26 010042 030011                  2$:	bit	r0,(r1)			; check error/xfer/done
      27 010044 001776                  	beq	2$			; loop if none
      28 010046 100433                  	bmi	error			; br if error
      29                                	
      30 010050 110413                  	movb	r4,(r3)			; set sector 1 + 2N
      31 010052 000304                  	swab	r4			; 
      32                                	
      33 010054 030011                  3$:	bit	r0,(r1)			; check error/xfer/done
      34 010056 001776                  	beq	3$			; loop if none
      35                                	
      36 010060 110413                  	movb	r4,(r3)			; set track 1
      37 010062 000304                  	swab	r4			; 
      38                                	
      39 010064 030011                  4$:	bit	r0,(r1)			; check error/xfer/done
      40 010066 001776                  	beq	4$			; loop if none
      41 010070 100422                  	bmi	error			; br if error
      42                                	
      43 010072 012711  000403          	mov	#403,(r1)		; double_density | empty_buffer | go
      44                                	
      45 010076 030011                  5$:	bit	r0,(r1)			; check error/xfer/done
      46 010100 001776                  	beq	5$			; loop if none
      47 010102 100415                  	bmi	error			; br if error
      48                                	
      49 010104 010513                  	mov	r5,(r3)			; set word count 128.
      50                                	
      51 010106 030011                  6$:	bit	r0,(r1)			; check error/xfer/done
      52 010110 001776                  	beq	6$			; loop if none
      53 010112 100411                  	bmi	error			; br if error
      54                                	
      55 010114 010213                  	mov	r2,(r3)			; set bus address
      56 010116 060502                  	add	r5,r2			; bump by 2x128. bytes
      57 010120 060502                  	add	r5,r2			; 
      58 010122 122424                  	cmpb	(r4)+,(r4)+		; add 2 to r4
      59                                	
      60 010124 120427  000005          	cmpb	r4,#5			; check for sector count
      61 010130 003737                  	ble	1$			; loop if more
      62                                	
      63 010132 005000                  	clr	r0			; zap status
      64 010134 005007                  	clr	pc			; go to bootstrap at zero
      65                                	
      66 010136 000000                  error:	halt				; die on error
rx02bo.mac:67: ***ERROR Branch target out of range (distance=-7742)
      67 010140 000400                  	br	begin			; and retry
      68                                
      69                                	.end
      69                                


Symbol table

.     = 010142           2$0   = 010042   L       4$0   = 010064   L       6$0   = 010106   L       ERROR = 010136           
1$0   = 010030   L       3$0   = 010054   L       5$0   = 010076   L       BEGIN = 000200           START = 010000           


Program sections:

. ABS.  010142    000   (RW,I,GBL,ABS,OVR,NOSAV)
        000000    001   (RW,I,LCL,REL,CON,NOSAV)
